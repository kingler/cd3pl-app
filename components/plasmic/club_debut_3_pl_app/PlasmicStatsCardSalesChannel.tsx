// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: n7PMUCBoe1fA7rXcBRi5FH
// Component: 5U-Zs7sqEeG
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_club_debut_3_pl_app.module.css"; // plasmic-import: n7PMUCBoe1fA7rXcBRi5FH/projectcss
import sty from "./PlasmicStatsCardSalesChannel.module.css"; // plasmic-import: 5U-Zs7sqEeG/css

import ArrowRightIcon from "./icons/PlasmicIcon__ArrowRight"; // plasmic-import: MwLzW1BmIz/icon

export type PlasmicStatsCardSalesChannel__VariantMembers = {};

export type PlasmicStatsCardSalesChannel__VariantsArgs = {};
type VariantPropType = keyof PlasmicStatsCardSalesChannel__VariantsArgs;
export const PlasmicStatsCardSalesChannel__VariantProps =
  new Array<VariantPropType>();

export type PlasmicStatsCardSalesChannel__ArgsType = {};
type ArgPropType = keyof PlasmicStatsCardSalesChannel__ArgsType;
export const PlasmicStatsCardSalesChannel__ArgProps = new Array<ArgPropType>();

export type PlasmicStatsCardSalesChannel__OverridesType = {
  root?: p.Flex<"div">;
  uiOrderStatsCardTitles3?: p.Flex<"div">;
  frame79?: p.Flex<"div">;
  all5?: p.Flex<"div">;
  svg?: p.Flex<"svg">;
  img?: p.Flex<typeof p.PlasmicImg>;
  uiOrderStatsCount3?: p.Flex<"div">;
  frame80?: p.Flex<"div">;
  ordersByEventsChannels?: p.Flex<"div">;
  uiOrdersByChannelCountLabel1?: p.Flex<"div">;
  ordersLabel?: p.Flex<"div">;
  uiOrdersStatsChannelLabel1?: p.Flex<"div">;
  ordersByWholesaleChannels?: p.Flex<"div">;
  uiOrdersByChannelCountLabel2?: p.Flex<"div">;
  ordersLabel2?: p.Flex<"div">;
  uiOrdersStatsChannelLabel2?: p.Flex<"div">;
  ordersByWholesaleChannels2?: p.Flex<"div">;
  uiOrdersByChannelCountLabel22?: p.Flex<"div">;
  ordersLabel3?: p.Flex<"div">;
  uiOrdersStatsChannelLabel3?: p.Flex<"div">;
  ordersByWholesaleChannels3?: p.Flex<"div">;
  uiOrdersByChannelCountLabel4?: p.Flex<"div">;
  ordersLabel4?: p.Flex<"div">;
  uiOrdersStatsChannelLabel4?: p.Flex<"div">;
  ordersByWholesaleChannels4?: p.Flex<"div">;
  uiOrdersByChannelCountLabel5?: p.Flex<"div">;
  ordersLabel5?: p.Flex<"div">;
  uiOrdersStatsChannelLabel5?: p.Flex<"div">;
  nBchartsColumnChats2?: p.Flex<"div">;
  columns12?: p.Flex<"div">;
  _112?: p.Flex<"div">;
  _142?: p.Flex<"div">;
  _132?: p.Flex<"div">;
  _122?: p.Flex<"div">;
  _123?: p.Flex<"div">;
};

export interface DefaultStatsCardSalesChannelProps {
  className?: string;
}

function PlasmicStatsCardSalesChannel__RenderFunc(props: {
  variants: PlasmicStatsCardSalesChannel__VariantsArgs;
  args: PlasmicStatsCardSalesChannel__ArgsType;
  overrides: PlasmicStatsCardSalesChannel__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <div
        data-plasmic-name={"uiOrderStatsCardTitles3"}
        data-plasmic-override={overrides.uiOrderStatsCardTitles3}
        className={classNames(
          projectcss.all,
          projectcss.__wab_text,
          sty.uiOrderStatsCardTitles3
        )}
      >
        {"Orders by Channel"}
      </div>

      <p.Stack
        as={"div"}
        data-plasmic-name={"frame79"}
        data-plasmic-override={overrides.frame79}
        hasGap={true}
        className={classNames(projectcss.all, sty.frame79)}
      >
        <div
          data-plasmic-name={"all5"}
          data-plasmic-override={overrides.all5}
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.all5
          )}
        >
          {"View All"}
        </div>

        <ArrowRightIcon
          data-plasmic-name={"svg"}
          data-plasmic-override={overrides.svg}
          className={classNames(projectcss.all, sty.svg)}
          role={"img"}
        />
      </p.Stack>

      <p.PlasmicImg
        data-plasmic-name={"img"}
        data-plasmic-override={overrides.img}
        alt={""}
        className={classNames(sty.img)}
        displayHeight={"110px" as const}
        displayMaxHeight={"none" as const}
        displayMaxWidth={"100%" as const}
        displayMinHeight={"0" as const}
        displayMinWidth={"0" as const}
        displayWidth={"109px" as const}
        loading={"lazy" as const}
        src={{
          src: "/plasmic/club_debut_3_pl_app/images/ellipse5.svg",
          fullWidth: 109,
          fullHeight: 110,
          aspectRatio: 0.990909
        }}
      />

      <div
        data-plasmic-name={"uiOrderStatsCount3"}
        data-plasmic-override={overrides.uiOrderStatsCount3}
        className={classNames(
          projectcss.all,
          projectcss.__wab_text,
          sty.uiOrderStatsCount3
        )}
      >
        {"3367"}
      </div>

      {true ? (
        <p.Stack
          as={"div"}
          data-plasmic-name={"frame80"}
          data-plasmic-override={overrides.frame80}
          hasGap={true}
          className={classNames(projectcss.all, sty.frame80)}
        >
          <div
            data-plasmic-name={"ordersByEventsChannels"}
            data-plasmic-override={overrides.ordersByEventsChannels}
            className={classNames(projectcss.all, sty.ordersByEventsChannels)}
          >
            <div
              data-plasmic-name={"uiOrdersByChannelCountLabel1"}
              data-plasmic-override={overrides.uiOrdersByChannelCountLabel1}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.uiOrdersByChannelCountLabel1
              )}
            >
              {"130"}
            </div>

            <div
              data-plasmic-name={"ordersLabel"}
              data-plasmic-override={overrides.ordersLabel}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.ordersLabel
              )}
            >
              {"Orders"}
            </div>

            <div
              data-plasmic-name={"uiOrdersStatsChannelLabel1"}
              data-plasmic-override={overrides.uiOrdersStatsChannelLabel1}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.uiOrdersStatsChannelLabel1
              )}
            >
              {"Events"}
            </div>
          </div>

          <div
            data-plasmic-name={"ordersByWholesaleChannels"}
            data-plasmic-override={overrides.ordersByWholesaleChannels}
            className={classNames(
              projectcss.all,
              sty.ordersByWholesaleChannels
            )}
          >
            <div
              data-plasmic-name={"uiOrdersByChannelCountLabel2"}
              data-plasmic-override={overrides.uiOrdersByChannelCountLabel2}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.uiOrdersByChannelCountLabel2
              )}
            >
              {"130"}
            </div>

            <div
              data-plasmic-name={"ordersLabel2"}
              data-plasmic-override={overrides.ordersLabel2}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.ordersLabel2
              )}
            >
              {"Orders"}
            </div>

            <div
              data-plasmic-name={"uiOrdersStatsChannelLabel2"}
              data-plasmic-override={overrides.uiOrdersStatsChannelLabel2}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.uiOrdersStatsChannelLabel2
              )}
            >
              {"Online"}
            </div>
          </div>

          <div
            data-plasmic-name={"ordersByWholesaleChannels2"}
            data-plasmic-override={overrides.ordersByWholesaleChannels2}
            className={classNames(
              projectcss.all,
              sty.ordersByWholesaleChannels2
            )}
          >
            <div
              data-plasmic-name={"uiOrdersByChannelCountLabel22"}
              data-plasmic-override={overrides.uiOrdersByChannelCountLabel22}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.uiOrdersByChannelCountLabel22
              )}
            >
              {"130"}
            </div>

            <div
              data-plasmic-name={"ordersLabel3"}
              data-plasmic-override={overrides.ordersLabel3}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.ordersLabel3
              )}
            >
              {"Orders"}
            </div>

            <div
              data-plasmic-name={"uiOrdersStatsChannelLabel3"}
              data-plasmic-override={overrides.uiOrdersStatsChannelLabel3}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.uiOrdersStatsChannelLabel3
              )}
            >
              {"Marketplace"}
            </div>
          </div>

          <div
            data-plasmic-name={"ordersByWholesaleChannels3"}
            data-plasmic-override={overrides.ordersByWholesaleChannels3}
            className={classNames(
              projectcss.all,
              sty.ordersByWholesaleChannels3
            )}
          >
            <div
              data-plasmic-name={"uiOrdersByChannelCountLabel4"}
              data-plasmic-override={overrides.uiOrdersByChannelCountLabel4}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.uiOrdersByChannelCountLabel4
              )}
            >
              {"130"}
            </div>

            <div
              data-plasmic-name={"ordersLabel4"}
              data-plasmic-override={overrides.ordersLabel4}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.ordersLabel4
              )}
            >
              {"Orders"}
            </div>

            <div
              data-plasmic-name={"uiOrdersStatsChannelLabel4"}
              data-plasmic-override={overrides.uiOrdersStatsChannelLabel4}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.uiOrdersStatsChannelLabel4
              )}
            >
              {"Wholesale"}
            </div>
          </div>

          <div
            data-plasmic-name={"ordersByWholesaleChannels4"}
            data-plasmic-override={overrides.ordersByWholesaleChannels4}
            className={classNames(
              projectcss.all,
              sty.ordersByWholesaleChannels4
            )}
          >
            <div
              data-plasmic-name={"uiOrdersByChannelCountLabel5"}
              data-plasmic-override={overrides.uiOrdersByChannelCountLabel5}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.uiOrdersByChannelCountLabel5
              )}
            >
              {"130"}
            </div>

            <div
              data-plasmic-name={"ordersLabel5"}
              data-plasmic-override={overrides.ordersLabel5}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.ordersLabel5
              )}
            >
              {"Orders"}
            </div>

            <div
              data-plasmic-name={"uiOrdersStatsChannelLabel5"}
              data-plasmic-override={overrides.uiOrdersStatsChannelLabel5}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.uiOrdersStatsChannelLabel5
              )}
            >
              {"Popup Shop"}
            </div>
          </div>
        </p.Stack>
      ) : null}

      <div
        data-plasmic-name={"nBchartsColumnChats2"}
        data-plasmic-override={overrides.nBchartsColumnChats2}
        className={classNames(projectcss.all, sty.nBchartsColumnChats2)}
      >
        <p.Stack
          as={"div"}
          data-plasmic-name={"columns12"}
          data-plasmic-override={overrides.columns12}
          hasGap={true}
          className={classNames(projectcss.all, sty.columns12)}
        >
          <div
            data-plasmic-name={"_112"}
            data-plasmic-override={overrides._112}
            className={classNames(projectcss.all, sty._112)}
          />

          <div
            data-plasmic-name={"_142"}
            data-plasmic-override={overrides._142}
            className={classNames(projectcss.all, sty._142)}
          />

          <div
            data-plasmic-name={"_132"}
            data-plasmic-override={overrides._132}
            className={classNames(projectcss.all, sty._132)}
          />

          <div
            data-plasmic-name={"_122"}
            data-plasmic-override={overrides._122}
            className={classNames(projectcss.all, sty._122)}
          />

          <div
            data-plasmic-name={"_123"}
            data-plasmic-override={overrides._123}
            className={classNames(projectcss.all, sty._123)}
          />
        </p.Stack>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "uiOrderStatsCardTitles3",
    "frame79",
    "all5",
    "svg",
    "img",
    "uiOrderStatsCount3",
    "frame80",
    "ordersByEventsChannels",
    "uiOrdersByChannelCountLabel1",
    "ordersLabel",
    "uiOrdersStatsChannelLabel1",
    "ordersByWholesaleChannels",
    "uiOrdersByChannelCountLabel2",
    "ordersLabel2",
    "uiOrdersStatsChannelLabel2",
    "ordersByWholesaleChannels2",
    "uiOrdersByChannelCountLabel22",
    "ordersLabel3",
    "uiOrdersStatsChannelLabel3",
    "ordersByWholesaleChannels3",
    "uiOrdersByChannelCountLabel4",
    "ordersLabel4",
    "uiOrdersStatsChannelLabel4",
    "ordersByWholesaleChannels4",
    "uiOrdersByChannelCountLabel5",
    "ordersLabel5",
    "uiOrdersStatsChannelLabel5",
    "nBchartsColumnChats2",
    "columns12",
    "_112",
    "_142",
    "_132",
    "_122",
    "_123"
  ],
  uiOrderStatsCardTitles3: ["uiOrderStatsCardTitles3"],
  frame79: ["frame79", "all5", "svg"],
  all5: ["all5"],
  svg: ["svg"],
  img: ["img"],
  uiOrderStatsCount3: ["uiOrderStatsCount3"],
  frame80: [
    "frame80",
    "ordersByEventsChannels",
    "uiOrdersByChannelCountLabel1",
    "ordersLabel",
    "uiOrdersStatsChannelLabel1",
    "ordersByWholesaleChannels",
    "uiOrdersByChannelCountLabel2",
    "ordersLabel2",
    "uiOrdersStatsChannelLabel2",
    "ordersByWholesaleChannels2",
    "uiOrdersByChannelCountLabel22",
    "ordersLabel3",
    "uiOrdersStatsChannelLabel3",
    "ordersByWholesaleChannels3",
    "uiOrdersByChannelCountLabel4",
    "ordersLabel4",
    "uiOrdersStatsChannelLabel4",
    "ordersByWholesaleChannels4",
    "uiOrdersByChannelCountLabel5",
    "ordersLabel5",
    "uiOrdersStatsChannelLabel5"
  ],
  ordersByEventsChannels: [
    "ordersByEventsChannels",
    "uiOrdersByChannelCountLabel1",
    "ordersLabel",
    "uiOrdersStatsChannelLabel1"
  ],
  uiOrdersByChannelCountLabel1: ["uiOrdersByChannelCountLabel1"],
  ordersLabel: ["ordersLabel"],
  uiOrdersStatsChannelLabel1: ["uiOrdersStatsChannelLabel1"],
  ordersByWholesaleChannels: [
    "ordersByWholesaleChannels",
    "uiOrdersByChannelCountLabel2",
    "ordersLabel2",
    "uiOrdersStatsChannelLabel2"
  ],
  uiOrdersByChannelCountLabel2: ["uiOrdersByChannelCountLabel2"],
  ordersLabel2: ["ordersLabel2"],
  uiOrdersStatsChannelLabel2: ["uiOrdersStatsChannelLabel2"],
  ordersByWholesaleChannels2: [
    "ordersByWholesaleChannels2",
    "uiOrdersByChannelCountLabel22",
    "ordersLabel3",
    "uiOrdersStatsChannelLabel3"
  ],
  uiOrdersByChannelCountLabel22: ["uiOrdersByChannelCountLabel22"],
  ordersLabel3: ["ordersLabel3"],
  uiOrdersStatsChannelLabel3: ["uiOrdersStatsChannelLabel3"],
  ordersByWholesaleChannels3: [
    "ordersByWholesaleChannels3",
    "uiOrdersByChannelCountLabel4",
    "ordersLabel4",
    "uiOrdersStatsChannelLabel4"
  ],
  uiOrdersByChannelCountLabel4: ["uiOrdersByChannelCountLabel4"],
  ordersLabel4: ["ordersLabel4"],
  uiOrdersStatsChannelLabel4: ["uiOrdersStatsChannelLabel4"],
  ordersByWholesaleChannels4: [
    "ordersByWholesaleChannels4",
    "uiOrdersByChannelCountLabel5",
    "ordersLabel5",
    "uiOrdersStatsChannelLabel5"
  ],
  uiOrdersByChannelCountLabel5: ["uiOrdersByChannelCountLabel5"],
  ordersLabel5: ["ordersLabel5"],
  uiOrdersStatsChannelLabel5: ["uiOrdersStatsChannelLabel5"],
  nBchartsColumnChats2: [
    "nBchartsColumnChats2",
    "columns12",
    "_112",
    "_142",
    "_132",
    "_122",
    "_123"
  ],
  columns12: ["columns12", "_112", "_142", "_132", "_122", "_123"],
  _112: ["_112"],
  _142: ["_142"],
  _132: ["_132"],
  _122: ["_122"],
  _123: ["_123"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  uiOrderStatsCardTitles3: "div";
  frame79: "div";
  all5: "div";
  svg: "svg";
  img: typeof p.PlasmicImg;
  uiOrderStatsCount3: "div";
  frame80: "div";
  ordersByEventsChannels: "div";
  uiOrdersByChannelCountLabel1: "div";
  ordersLabel: "div";
  uiOrdersStatsChannelLabel1: "div";
  ordersByWholesaleChannels: "div";
  uiOrdersByChannelCountLabel2: "div";
  ordersLabel2: "div";
  uiOrdersStatsChannelLabel2: "div";
  ordersByWholesaleChannels2: "div";
  uiOrdersByChannelCountLabel22: "div";
  ordersLabel3: "div";
  uiOrdersStatsChannelLabel3: "div";
  ordersByWholesaleChannels3: "div";
  uiOrdersByChannelCountLabel4: "div";
  ordersLabel4: "div";
  uiOrdersStatsChannelLabel4: "div";
  ordersByWholesaleChannels4: "div";
  uiOrdersByChannelCountLabel5: "div";
  ordersLabel5: "div";
  uiOrdersStatsChannelLabel5: "div";
  nBchartsColumnChats2: "div";
  columns12: "div";
  _112: "div";
  _142: "div";
  _132: "div";
  _122: "div";
  _123: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicStatsCardSalesChannel__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicStatsCardSalesChannel__VariantsArgs;
    args?: PlasmicStatsCardSalesChannel__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicStatsCardSalesChannel__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicStatsCardSalesChannel__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicStatsCardSalesChannel__ArgProps,
      internalVariantPropNames: PlasmicStatsCardSalesChannel__VariantProps
    });

    return PlasmicStatsCardSalesChannel__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicStatsCardSalesChannel";
  } else {
    func.displayName = `PlasmicStatsCardSalesChannel.${nodeName}`;
  }
  return func;
}

export const PlasmicStatsCardSalesChannel = Object.assign(
  // Top-level PlasmicStatsCardSalesChannel renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    uiOrderStatsCardTitles3: makeNodeComponent("uiOrderStatsCardTitles3"),
    frame79: makeNodeComponent("frame79"),
    all5: makeNodeComponent("all5"),
    svg: makeNodeComponent("svg"),
    img: makeNodeComponent("img"),
    uiOrderStatsCount3: makeNodeComponent("uiOrderStatsCount3"),
    frame80: makeNodeComponent("frame80"),
    ordersByEventsChannels: makeNodeComponent("ordersByEventsChannels"),
    uiOrdersByChannelCountLabel1: makeNodeComponent(
      "uiOrdersByChannelCountLabel1"
    ),
    ordersLabel: makeNodeComponent("ordersLabel"),
    uiOrdersStatsChannelLabel1: makeNodeComponent("uiOrdersStatsChannelLabel1"),
    ordersByWholesaleChannels: makeNodeComponent("ordersByWholesaleChannels"),
    uiOrdersByChannelCountLabel2: makeNodeComponent(
      "uiOrdersByChannelCountLabel2"
    ),
    ordersLabel2: makeNodeComponent("ordersLabel2"),
    uiOrdersStatsChannelLabel2: makeNodeComponent("uiOrdersStatsChannelLabel2"),
    ordersByWholesaleChannels2: makeNodeComponent("ordersByWholesaleChannels2"),
    uiOrdersByChannelCountLabel22: makeNodeComponent(
      "uiOrdersByChannelCountLabel22"
    ),
    ordersLabel3: makeNodeComponent("ordersLabel3"),
    uiOrdersStatsChannelLabel3: makeNodeComponent("uiOrdersStatsChannelLabel3"),
    ordersByWholesaleChannels3: makeNodeComponent("ordersByWholesaleChannels3"),
    uiOrdersByChannelCountLabel4: makeNodeComponent(
      "uiOrdersByChannelCountLabel4"
    ),
    ordersLabel4: makeNodeComponent("ordersLabel4"),
    uiOrdersStatsChannelLabel4: makeNodeComponent("uiOrdersStatsChannelLabel4"),
    ordersByWholesaleChannels4: makeNodeComponent("ordersByWholesaleChannels4"),
    uiOrdersByChannelCountLabel5: makeNodeComponent(
      "uiOrdersByChannelCountLabel5"
    ),
    ordersLabel5: makeNodeComponent("ordersLabel5"),
    uiOrdersStatsChannelLabel5: makeNodeComponent("uiOrdersStatsChannelLabel5"),
    nBchartsColumnChats2: makeNodeComponent("nBchartsColumnChats2"),
    columns12: makeNodeComponent("columns12"),
    _112: makeNodeComponent("_112"),
    _142: makeNodeComponent("_142"),
    _132: makeNodeComponent("_132"),
    _122: makeNodeComponent("_122"),
    _123: makeNodeComponent("_123"),

    // Metadata about props expected for PlasmicStatsCardSalesChannel
    internalVariantProps: PlasmicStatsCardSalesChannel__VariantProps,
    internalArgProps: PlasmicStatsCardSalesChannel__ArgProps
  }
);

export default PlasmicStatsCardSalesChannel;
/* prettier-ignore-end */
