// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: n7PMUCBoe1fA7rXcBRi5FH
// Component: YFRpRP19Qn1
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import StatWidgetControls from "../../StatWidgetControls"; // plasmic-import: HLNvZebaAJ/component
import { Tabs } from "@plasmicpkgs/antd"; // plasmic-import: Hb-DVgvuk3/codeComponent
import { TabPane } from "rc-tabs"; // plasmic-import: p3HNI5RglT/codeComponent

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_club_debut_3_pl_app.module.css"; // plasmic-import: n7PMUCBoe1fA7rXcBRi5FH/projectcss
import sty from "./PlasmicStatsCardDate.module.css"; // plasmic-import: YFRpRP19Qn1/css

import ShopiconMonoAdd4Icon from "./icons/PlasmicIcon__ShopiconMonoAdd4"; // plasmic-import: mReE8MohhS/icon
import ShopiconMonoAdd2Icon from "./icons/PlasmicIcon__ShopiconMonoAdd2"; // plasmic-import: XeUS1lllRFD/icon

export type PlasmicStatsCardDate__VariantMembers = {};

export type PlasmicStatsCardDate__VariantsArgs = {};
type VariantPropType = keyof PlasmicStatsCardDate__VariantsArgs;
export const PlasmicStatsCardDate__VariantProps = new Array<VariantPropType>();

export type PlasmicStatsCardDate__ArgsType = {};
type ArgPropType = keyof PlasmicStatsCardDate__ArgsType;
export const PlasmicStatsCardDate__ArgProps = new Array<ArgPropType>();

export type PlasmicStatsCardDate__OverridesType = {
  orderStatisticsCard?: p.Flex<"div">;
  statWidgetControls?: p.Flex<typeof StatWidgetControls>;
  antdTabs?: p.Flex<typeof Tabs>;
  ordersByDay?: p.Flex<typeof TabPane>;
  barChat3?: p.Flex<"div">;
  chartNavigationControl3?: p.Flex<"div">;
  previousButton3?: p.Flex<"a"> & Partial<LinkProps>;
  previousDay3?: p.Flex<"div">;
  chartHeading3?: p.Flex<"div">;
  dayNextButton?: p.Flex<"a"> & Partial<LinkProps>;
  next3?: p.Flex<"div">;
  rightArrow3?: p.Flex<"svg">;
  ordersTotalValueInfocus?: p.Flex<"div">;
  barValues3?: p.Flex<"div">;
  sunOrdersTotalValue?: p.Flex<"div">;
  monOrdersTotalValue?: p.Flex<"div">;
  tueOrdersTotalValue?: p.Flex<"div">;
  wedOrdersTotalValue?: p.Flex<"div">;
  thrOrdersTotalValue?: p.Flex<"div">;
  friOrdersTotalValue?: p.Flex<"div">;
  satOrdersTotalValue?: p.Flex<"div">;
  bars3?: p.Flex<"div">;
  _113?: p.Flex<"div">;
  _123?: p.Flex<"div">;
  _133?: p.Flex<"div">;
  _143?: p.Flex<"div">;
  _147?: p.Flex<"div">;
  _148?: p.Flex<"div">;
  _149?: p.Flex<"div">;
  bottomText3?: p.Flex<"div">;
  dayValue1?: p.Flex<"div">;
  dayValue2?: p.Flex<"div">;
  dayValue3?: p.Flex<"div">;
  dayValue4?: p.Flex<"div">;
  dayValue5?: p.Flex<"div">;
  dayValue6?: p.Flex<"div">;
  dayValue7?: p.Flex<"div">;
  ordersByMonth?: p.Flex<typeof TabPane>;
  monthBarChat?: p.Flex<"div">;
  chartNavigationControl2?: p.Flex<"div">;
  monthPreviousButton?: p.Flex<"a"> & Partial<LinkProps>;
  previousMonth?: p.Flex<"div">;
  monthValue?: p.Flex<"div">;
  monthNextButton?: p.Flex<"a"> & Partial<LinkProps>;
  next4?: p.Flex<"div">;
  rightArrow4?: p.Flex<"svg">;
  orderTotalValue?: p.Flex<"div">;
  barValues4?: p.Flex<"div">;
  janOrdersTotalValue?: p.Flex<"div">;
  febOrdersTotalValue?: p.Flex<"div">;
  marOrdersTotalValue?: p.Flex<"div">;
  aprOrdersTotalValue?: p.Flex<"div">;
  mayOrdersTotalValue?: p.Flex<"div">;
  junOrdersTotalValue?: p.Flex<"div">;
  julOrdersTotalValue?: p.Flex<"div">;
  augOrdersTotalValue?: p.Flex<"div">;
  bars4?: p.Flex<"div">;
  _114?: p.Flex<"div">;
  _124?: p.Flex<"div">;
  _134?: p.Flex<"div">;
  _1410?: p.Flex<"div">;
  _1411?: p.Flex<"div">;
  _1412?: p.Flex<"div">;
  _1413?: p.Flex<"div">;
  _1414?: p.Flex<"div">;
  bottomText4?: p.Flex<"div">;
  monthValue1?: p.Flex<"div">;
  monthValue2?: p.Flex<"div">;
  monthValue3?: p.Flex<"div">;
  monthValue4?: p.Flex<"div">;
  monthValue5?: p.Flex<"div">;
  monthValue6?: p.Flex<"div">;
  monthValue7?: p.Flex<"div">;
  monthValue8?: p.Flex<"div">;
};

export interface DefaultStatsCardDateProps {
  className?: string;
}

function PlasmicStatsCardDate__RenderFunc(props: {
  variants: PlasmicStatsCardDate__VariantsArgs;
  args: PlasmicStatsCardDate__ArgsType;
  overrides: PlasmicStatsCardDate__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;

  return (
    <div
      data-plasmic-name={"orderStatisticsCard"}
      data-plasmic-override={overrides.orderStatisticsCard}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.orderStatisticsCard
      )}
    >
      {true ? (
        <StatWidgetControls
          data-plasmic-name={"statWidgetControls"}
          data-plasmic-override={overrides.statWidgetControls}
          className={classNames("__wab_instance", sty.statWidgetControls)}
        />
      ) : null}

      <Tabs
        data-plasmic-name={"antdTabs"}
        data-plasmic-override={overrides.antdTabs}
        className={classNames("__wab_instance", sty.antdTabs)}
        defaultActiveKey={"1" as const}
        leftTabBarExtraContent={null}
        rightTabBarExtraContent={null}
        size={"default" as const}
        tabPosition={"top" as const}
      >
        {true ? (
          <TabPane
            data-plasmic-name={"ordersByDay"}
            data-plasmic-override={overrides.ordersByDay}
            className={classNames("__wab_instance", sty.ordersByDay)}
            key={"1" as const}
            tab={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__uFeWj
                )}
              >
                {"Day"}
              </div>
            }
          >
            {true ? (
              <p.Stack
                as={"div"}
                data-plasmic-name={"barChat3"}
                data-plasmic-override={overrides.barChat3}
                hasGap={true}
                className={classNames(projectcss.all, sty.barChat3)}
              >
                {true ? (
                  <div
                    data-plasmic-name={"chartNavigationControl3"}
                    data-plasmic-override={overrides.chartNavigationControl3}
                    className={classNames(
                      projectcss.all,
                      sty.chartNavigationControl3
                    )}
                  >
                    <p.Stack
                      as={p.PlasmicLink}
                      data-plasmic-name={"previousButton3"}
                      data-plasmic-override={overrides.previousButton3}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.previousButton3
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      <ShopiconMonoAdd4Icon
                        className={classNames(projectcss.all, sty.svg__m2TNy)}
                        role={"img"}
                      />

                      <div
                        data-plasmic-name={"previousDay3"}
                        data-plasmic-override={overrides.previousDay3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.previousDay3
                        )}
                      >
                        {"Prev"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"chartHeading3"}
                      data-plasmic-override={overrides.chartHeading3}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.chartHeading3,
                        "widget_header" as const
                      )}
                    >
                      {"Today's Orders"}
                    </div>

                    <p.Stack
                      as={p.PlasmicLink}
                      data-plasmic-name={"dayNextButton"}
                      data-plasmic-override={overrides.dayNextButton}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.dayNextButton
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      <div
                        data-plasmic-name={"next3"}
                        data-plasmic-override={overrides.next3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.next3
                        )}
                      >
                        {"Next"}
                      </div>

                      <ShopiconMonoAdd2Icon
                        data-plasmic-name={"rightArrow3"}
                        data-plasmic-override={overrides.rightArrow3}
                        className={classNames(projectcss.all, sty.rightArrow3)}
                        role={"img"}
                      />
                    </p.Stack>
                  </div>
                ) : null}

                <div
                  data-plasmic-name={"ordersTotalValueInfocus"}
                  data-plasmic-override={overrides.ordersTotalValueInfocus}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.ordersTotalValueInfocus
                  )}
                >
                  {"247"}
                </div>

                {true ? (
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"barValues3"}
                    data-plasmic-override={overrides.barValues3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.barValues3)}
                  >
                    <div
                      data-plasmic-name={"sunOrdersTotalValue"}
                      data-plasmic-override={overrides.sunOrdersTotalValue}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.sunOrdersTotalValue
                      )}
                    >
                      {"100"}
                    </div>

                    <div
                      data-plasmic-name={"monOrdersTotalValue"}
                      data-plasmic-override={overrides.monOrdersTotalValue}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.monOrdersTotalValue
                      )}
                    >
                      {"140"}
                    </div>

                    <div
                      data-plasmic-name={"tueOrdersTotalValue"}
                      data-plasmic-override={overrides.tueOrdersTotalValue}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.tueOrdersTotalValue
                      )}
                    >
                      {"170"}
                    </div>

                    <div
                      data-plasmic-name={"wedOrdersTotalValue"}
                      data-plasmic-override={overrides.wedOrdersTotalValue}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.wedOrdersTotalValue
                      )}
                    >
                      {"247"}
                    </div>

                    <div
                      data-plasmic-name={"thrOrdersTotalValue"}
                      data-plasmic-override={overrides.thrOrdersTotalValue}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.thrOrdersTotalValue
                      )}
                    >
                      {"0"}
                    </div>

                    <div
                      data-plasmic-name={"friOrdersTotalValue"}
                      data-plasmic-override={overrides.friOrdersTotalValue}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.friOrdersTotalValue
                      )}
                    >
                      {"0"}
                    </div>

                    <div
                      data-plasmic-name={"satOrdersTotalValue"}
                      data-plasmic-override={overrides.satOrdersTotalValue}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.satOrdersTotalValue
                      )}
                    >
                      {"0"}
                    </div>
                  </p.Stack>
                ) : null}

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"bars3"}
                  data-plasmic-override={overrides.bars3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.bars3)}
                >
                  <div
                    data-plasmic-name={"_113"}
                    data-plasmic-override={overrides._113}
                    className={classNames(projectcss.all, sty._113)}
                  />

                  <div
                    data-plasmic-name={"_123"}
                    data-plasmic-override={overrides._123}
                    className={classNames(projectcss.all, sty._123)}
                  />

                  <div
                    data-plasmic-name={"_133"}
                    data-plasmic-override={overrides._133}
                    className={classNames(projectcss.all, sty._133)}
                  />

                  <div
                    data-plasmic-name={"_143"}
                    data-plasmic-override={overrides._143}
                    className={classNames(projectcss.all, sty._143)}
                  />

                  <div
                    data-plasmic-name={"_147"}
                    data-plasmic-override={overrides._147}
                    className={classNames(projectcss.all, sty._147)}
                  />

                  <div
                    data-plasmic-name={"_148"}
                    data-plasmic-override={overrides._148}
                    className={classNames(projectcss.all, sty._148)}
                  />

                  <div
                    data-plasmic-name={"_149"}
                    data-plasmic-override={overrides._149}
                    className={classNames(projectcss.all, sty._149)}
                  />
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"bottomText3"}
                  data-plasmic-override={overrides.bottomText3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.bottomText3)}
                >
                  <div
                    data-plasmic-name={"dayValue1"}
                    data-plasmic-override={overrides.dayValue1}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.dayValue1
                    )}
                  >
                    {"sun"}
                  </div>

                  <div
                    data-plasmic-name={"dayValue2"}
                    data-plasmic-override={overrides.dayValue2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.dayValue2
                    )}
                  >
                    {"mon"}
                  </div>

                  <div
                    data-plasmic-name={"dayValue3"}
                    data-plasmic-override={overrides.dayValue3}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.dayValue3
                    )}
                  >
                    {"tue"}
                  </div>

                  <div
                    data-plasmic-name={"dayValue4"}
                    data-plasmic-override={overrides.dayValue4}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.dayValue4
                    )}
                  >
                    {"wed"}
                  </div>

                  <div
                    data-plasmic-name={"dayValue5"}
                    data-plasmic-override={overrides.dayValue5}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.dayValue5
                    )}
                  >
                    {"thr"}
                  </div>

                  <div
                    data-plasmic-name={"dayValue6"}
                    data-plasmic-override={overrides.dayValue6}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.dayValue6
                    )}
                  >
                    {"fri"}
                  </div>

                  <div
                    data-plasmic-name={"dayValue7"}
                    data-plasmic-override={overrides.dayValue7}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.dayValue7
                    )}
                  >
                    {"sat"}
                  </div>
                </p.Stack>
              </p.Stack>
            ) : null}
          </TabPane>
        ) : null}

        <TabPane
          data-plasmic-name={"ordersByMonth"}
          data-plasmic-override={overrides.ordersByMonth}
          className={classNames("__wab_instance", sty.ordersByMonth)}
          closable={true}
          forceRender={false}
          key={"2" as const}
          tab={
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__io5K
              )}
            >
              {"Month"}
            </div>
          }
        >
          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"monthBarChat"}
              data-plasmic-override={overrides.monthBarChat}
              hasGap={true}
              className={classNames(projectcss.all, sty.monthBarChat)}
            >
              {true ? (
                <div
                  data-plasmic-name={"chartNavigationControl2"}
                  data-plasmic-override={overrides.chartNavigationControl2}
                  className={classNames(
                    projectcss.all,
                    sty.chartNavigationControl2
                  )}
                >
                  <p.Stack
                    as={p.PlasmicLink}
                    data-plasmic-name={"monthPreviousButton"}
                    data-plasmic-override={overrides.monthPreviousButton}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.monthPreviousButton
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    <ShopiconMonoAdd4Icon
                      className={classNames(projectcss.all, sty.svg__wFsS)}
                      role={"img"}
                    />

                    <div
                      data-plasmic-name={"previousMonth"}
                      data-plasmic-override={overrides.previousMonth}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.previousMonth
                      )}
                    >
                      {"Prev"}
                    </div>
                  </p.Stack>

                  <div
                    data-plasmic-name={"monthValue"}
                    data-plasmic-override={overrides.monthValue}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.monthValue,
                      "widget_header" as const
                    )}
                  >
                    {"April  Orders"}
                  </div>

                  <p.Stack
                    as={p.PlasmicLink}
                    data-plasmic-name={"monthNextButton"}
                    data-plasmic-override={overrides.monthNextButton}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.monthNextButton
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    <div
                      data-plasmic-name={"next4"}
                      data-plasmic-override={overrides.next4}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.next4
                      )}
                    >
                      {"Next"}
                    </div>

                    <ShopiconMonoAdd2Icon
                      data-plasmic-name={"rightArrow4"}
                      data-plasmic-override={overrides.rightArrow4}
                      className={classNames(projectcss.all, sty.rightArrow4)}
                      role={"img"}
                    />
                  </p.Stack>
                </div>
              ) : null}

              <div
                data-plasmic-name={"orderTotalValue"}
                data-plasmic-override={overrides.orderTotalValue}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.orderTotalValue
                )}
              >
                {"435"}
              </div>

              {true ? (
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"barValues4"}
                  data-plasmic-override={overrides.barValues4}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.barValues4)}
                >
                  <div
                    data-plasmic-name={"janOrdersTotalValue"}
                    data-plasmic-override={overrides.janOrdersTotalValue}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.janOrdersTotalValue
                    )}
                  >
                    {"110"}
                  </div>

                  <div
                    data-plasmic-name={"febOrdersTotalValue"}
                    data-plasmic-override={overrides.febOrdersTotalValue}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.febOrdersTotalValue
                    )}
                  >
                    {"234"}
                  </div>

                  <div
                    data-plasmic-name={"marOrdersTotalValue"}
                    data-plasmic-override={overrides.marOrdersTotalValue}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.marOrdersTotalValue
                    )}
                  >
                    {"360"}
                  </div>

                  <div
                    data-plasmic-name={"aprOrdersTotalValue"}
                    data-plasmic-override={overrides.aprOrdersTotalValue}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.aprOrdersTotalValue
                    )}
                  >
                    {"435"}
                  </div>

                  <div
                    data-plasmic-name={"mayOrdersTotalValue"}
                    data-plasmic-override={overrides.mayOrdersTotalValue}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.mayOrdersTotalValue
                    )}
                  >
                    {"0"}
                  </div>

                  <div
                    data-plasmic-name={"junOrdersTotalValue"}
                    data-plasmic-override={overrides.junOrdersTotalValue}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.junOrdersTotalValue
                    )}
                  >
                    {"0"}
                  </div>

                  <div
                    data-plasmic-name={"julOrdersTotalValue"}
                    data-plasmic-override={overrides.julOrdersTotalValue}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.julOrdersTotalValue
                    )}
                  >
                    {"0"}
                  </div>

                  <div
                    data-plasmic-name={"augOrdersTotalValue"}
                    data-plasmic-override={overrides.augOrdersTotalValue}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.augOrdersTotalValue
                    )}
                  >
                    {"0"}
                  </div>
                </p.Stack>
              ) : null}

              <p.Stack
                as={"div"}
                data-plasmic-name={"bars4"}
                data-plasmic-override={overrides.bars4}
                hasGap={true}
                className={classNames(projectcss.all, sty.bars4)}
              >
                <div
                  data-plasmic-name={"_114"}
                  data-plasmic-override={overrides._114}
                  className={classNames(projectcss.all, sty._114)}
                />

                <div
                  data-plasmic-name={"_124"}
                  data-plasmic-override={overrides._124}
                  className={classNames(projectcss.all, sty._124)}
                />

                <div
                  data-plasmic-name={"_134"}
                  data-plasmic-override={overrides._134}
                  className={classNames(projectcss.all, sty._134)}
                />

                <div
                  data-plasmic-name={"_1410"}
                  data-plasmic-override={overrides._1410}
                  className={classNames(projectcss.all, sty._1410)}
                />

                <div
                  data-plasmic-name={"_1411"}
                  data-plasmic-override={overrides._1411}
                  className={classNames(projectcss.all, sty._1411)}
                />

                <div
                  data-plasmic-name={"_1412"}
                  data-plasmic-override={overrides._1412}
                  className={classNames(projectcss.all, sty._1412)}
                />

                <div
                  data-plasmic-name={"_1413"}
                  data-plasmic-override={overrides._1413}
                  className={classNames(projectcss.all, sty._1413)}
                />

                <div
                  data-plasmic-name={"_1414"}
                  data-plasmic-override={overrides._1414}
                  className={classNames(projectcss.all, sty._1414)}
                />
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"bottomText4"}
                data-plasmic-override={overrides.bottomText4}
                hasGap={true}
                className={classNames(projectcss.all, sty.bottomText4)}
              >
                <div
                  data-plasmic-name={"monthValue1"}
                  data-plasmic-override={overrides.monthValue1}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.monthValue1
                  )}
                >
                  {"Jan"}
                </div>

                <div
                  data-plasmic-name={"monthValue2"}
                  data-plasmic-override={overrides.monthValue2}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.monthValue2
                  )}
                >
                  {"Feb"}
                </div>

                <div
                  data-plasmic-name={"monthValue3"}
                  data-plasmic-override={overrides.monthValue3}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.monthValue3
                  )}
                >
                  {"Mar"}
                </div>

                <div
                  data-plasmic-name={"monthValue4"}
                  data-plasmic-override={overrides.monthValue4}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.monthValue4
                  )}
                >
                  {"Apr"}
                </div>

                <div
                  data-plasmic-name={"monthValue5"}
                  data-plasmic-override={overrides.monthValue5}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.monthValue5
                  )}
                >
                  {"May"}
                </div>

                <div
                  data-plasmic-name={"monthValue6"}
                  data-plasmic-override={overrides.monthValue6}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.monthValue6
                  )}
                >
                  {"Jun"}
                </div>

                <div
                  data-plasmic-name={"monthValue7"}
                  data-plasmic-override={overrides.monthValue7}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.monthValue7
                  )}
                >
                  {"Jul"}
                </div>

                <div
                  data-plasmic-name={"monthValue8"}
                  data-plasmic-override={overrides.monthValue8}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.monthValue8
                  )}
                >
                  {"Aug"}
                </div>
              </p.Stack>
            </p.Stack>
          ) : null}
        </TabPane>
      </Tabs>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  orderStatisticsCard: [
    "orderStatisticsCard",
    "statWidgetControls",
    "antdTabs",
    "ordersByDay",
    "barChat3",
    "chartNavigationControl3",
    "previousButton3",
    "previousDay3",
    "chartHeading3",
    "dayNextButton",
    "next3",
    "rightArrow3",
    "ordersTotalValueInfocus",
    "barValues3",
    "sunOrdersTotalValue",
    "monOrdersTotalValue",
    "tueOrdersTotalValue",
    "wedOrdersTotalValue",
    "thrOrdersTotalValue",
    "friOrdersTotalValue",
    "satOrdersTotalValue",
    "bars3",
    "_113",
    "_123",
    "_133",
    "_143",
    "_147",
    "_148",
    "_149",
    "bottomText3",
    "dayValue1",
    "dayValue2",
    "dayValue3",
    "dayValue4",
    "dayValue5",
    "dayValue6",
    "dayValue7",
    "ordersByMonth",
    "monthBarChat",
    "chartNavigationControl2",
    "monthPreviousButton",
    "previousMonth",
    "monthValue",
    "monthNextButton",
    "next4",
    "rightArrow4",
    "orderTotalValue",
    "barValues4",
    "janOrdersTotalValue",
    "febOrdersTotalValue",
    "marOrdersTotalValue",
    "aprOrdersTotalValue",
    "mayOrdersTotalValue",
    "junOrdersTotalValue",
    "julOrdersTotalValue",
    "augOrdersTotalValue",
    "bars4",
    "_114",
    "_124",
    "_134",
    "_1410",
    "_1411",
    "_1412",
    "_1413",
    "_1414",
    "bottomText4",
    "monthValue1",
    "monthValue2",
    "monthValue3",
    "monthValue4",
    "monthValue5",
    "monthValue6",
    "monthValue7",
    "monthValue8"
  ],
  statWidgetControls: ["statWidgetControls"],
  antdTabs: [
    "antdTabs",
    "ordersByDay",
    "barChat3",
    "chartNavigationControl3",
    "previousButton3",
    "previousDay3",
    "chartHeading3",
    "dayNextButton",
    "next3",
    "rightArrow3",
    "ordersTotalValueInfocus",
    "barValues3",
    "sunOrdersTotalValue",
    "monOrdersTotalValue",
    "tueOrdersTotalValue",
    "wedOrdersTotalValue",
    "thrOrdersTotalValue",
    "friOrdersTotalValue",
    "satOrdersTotalValue",
    "bars3",
    "_113",
    "_123",
    "_133",
    "_143",
    "_147",
    "_148",
    "_149",
    "bottomText3",
    "dayValue1",
    "dayValue2",
    "dayValue3",
    "dayValue4",
    "dayValue5",
    "dayValue6",
    "dayValue7",
    "ordersByMonth",
    "monthBarChat",
    "chartNavigationControl2",
    "monthPreviousButton",
    "previousMonth",
    "monthValue",
    "monthNextButton",
    "next4",
    "rightArrow4",
    "orderTotalValue",
    "barValues4",
    "janOrdersTotalValue",
    "febOrdersTotalValue",
    "marOrdersTotalValue",
    "aprOrdersTotalValue",
    "mayOrdersTotalValue",
    "junOrdersTotalValue",
    "julOrdersTotalValue",
    "augOrdersTotalValue",
    "bars4",
    "_114",
    "_124",
    "_134",
    "_1410",
    "_1411",
    "_1412",
    "_1413",
    "_1414",
    "bottomText4",
    "monthValue1",
    "monthValue2",
    "monthValue3",
    "monthValue4",
    "monthValue5",
    "monthValue6",
    "monthValue7",
    "monthValue8"
  ],
  ordersByDay: [
    "ordersByDay",
    "barChat3",
    "chartNavigationControl3",
    "previousButton3",
    "previousDay3",
    "chartHeading3",
    "dayNextButton",
    "next3",
    "rightArrow3",
    "ordersTotalValueInfocus",
    "barValues3",
    "sunOrdersTotalValue",
    "monOrdersTotalValue",
    "tueOrdersTotalValue",
    "wedOrdersTotalValue",
    "thrOrdersTotalValue",
    "friOrdersTotalValue",
    "satOrdersTotalValue",
    "bars3",
    "_113",
    "_123",
    "_133",
    "_143",
    "_147",
    "_148",
    "_149",
    "bottomText3",
    "dayValue1",
    "dayValue2",
    "dayValue3",
    "dayValue4",
    "dayValue5",
    "dayValue6",
    "dayValue7"
  ],
  barChat3: [
    "barChat3",
    "chartNavigationControl3",
    "previousButton3",
    "previousDay3",
    "chartHeading3",
    "dayNextButton",
    "next3",
    "rightArrow3",
    "ordersTotalValueInfocus",
    "barValues3",
    "sunOrdersTotalValue",
    "monOrdersTotalValue",
    "tueOrdersTotalValue",
    "wedOrdersTotalValue",
    "thrOrdersTotalValue",
    "friOrdersTotalValue",
    "satOrdersTotalValue",
    "bars3",
    "_113",
    "_123",
    "_133",
    "_143",
    "_147",
    "_148",
    "_149",
    "bottomText3",
    "dayValue1",
    "dayValue2",
    "dayValue3",
    "dayValue4",
    "dayValue5",
    "dayValue6",
    "dayValue7"
  ],
  chartNavigationControl3: [
    "chartNavigationControl3",
    "previousButton3",
    "previousDay3",
    "chartHeading3",
    "dayNextButton",
    "next3",
    "rightArrow3"
  ],
  previousButton3: ["previousButton3", "previousDay3"],
  previousDay3: ["previousDay3"],
  chartHeading3: ["chartHeading3"],
  dayNextButton: ["dayNextButton", "next3", "rightArrow3"],
  next3: ["next3"],
  rightArrow3: ["rightArrow3"],
  ordersTotalValueInfocus: ["ordersTotalValueInfocus"],
  barValues3: [
    "barValues3",
    "sunOrdersTotalValue",
    "monOrdersTotalValue",
    "tueOrdersTotalValue",
    "wedOrdersTotalValue",
    "thrOrdersTotalValue",
    "friOrdersTotalValue",
    "satOrdersTotalValue"
  ],
  sunOrdersTotalValue: ["sunOrdersTotalValue"],
  monOrdersTotalValue: ["monOrdersTotalValue"],
  tueOrdersTotalValue: ["tueOrdersTotalValue"],
  wedOrdersTotalValue: ["wedOrdersTotalValue"],
  thrOrdersTotalValue: ["thrOrdersTotalValue"],
  friOrdersTotalValue: ["friOrdersTotalValue"],
  satOrdersTotalValue: ["satOrdersTotalValue"],
  bars3: ["bars3", "_113", "_123", "_133", "_143", "_147", "_148", "_149"],
  _113: ["_113"],
  _123: ["_123"],
  _133: ["_133"],
  _143: ["_143"],
  _147: ["_147"],
  _148: ["_148"],
  _149: ["_149"],
  bottomText3: [
    "bottomText3",
    "dayValue1",
    "dayValue2",
    "dayValue3",
    "dayValue4",
    "dayValue5",
    "dayValue6",
    "dayValue7"
  ],
  dayValue1: ["dayValue1"],
  dayValue2: ["dayValue2"],
  dayValue3: ["dayValue3"],
  dayValue4: ["dayValue4"],
  dayValue5: ["dayValue5"],
  dayValue6: ["dayValue6"],
  dayValue7: ["dayValue7"],
  ordersByMonth: [
    "ordersByMonth",
    "monthBarChat",
    "chartNavigationControl2",
    "monthPreviousButton",
    "previousMonth",
    "monthValue",
    "monthNextButton",
    "next4",
    "rightArrow4",
    "orderTotalValue",
    "barValues4",
    "janOrdersTotalValue",
    "febOrdersTotalValue",
    "marOrdersTotalValue",
    "aprOrdersTotalValue",
    "mayOrdersTotalValue",
    "junOrdersTotalValue",
    "julOrdersTotalValue",
    "augOrdersTotalValue",
    "bars4",
    "_114",
    "_124",
    "_134",
    "_1410",
    "_1411",
    "_1412",
    "_1413",
    "_1414",
    "bottomText4",
    "monthValue1",
    "monthValue2",
    "monthValue3",
    "monthValue4",
    "monthValue5",
    "monthValue6",
    "monthValue7",
    "monthValue8"
  ],
  monthBarChat: [
    "monthBarChat",
    "chartNavigationControl2",
    "monthPreviousButton",
    "previousMonth",
    "monthValue",
    "monthNextButton",
    "next4",
    "rightArrow4",
    "orderTotalValue",
    "barValues4",
    "janOrdersTotalValue",
    "febOrdersTotalValue",
    "marOrdersTotalValue",
    "aprOrdersTotalValue",
    "mayOrdersTotalValue",
    "junOrdersTotalValue",
    "julOrdersTotalValue",
    "augOrdersTotalValue",
    "bars4",
    "_114",
    "_124",
    "_134",
    "_1410",
    "_1411",
    "_1412",
    "_1413",
    "_1414",
    "bottomText4",
    "monthValue1",
    "monthValue2",
    "monthValue3",
    "monthValue4",
    "monthValue5",
    "monthValue6",
    "monthValue7",
    "monthValue8"
  ],
  chartNavigationControl2: [
    "chartNavigationControl2",
    "monthPreviousButton",
    "previousMonth",
    "monthValue",
    "monthNextButton",
    "next4",
    "rightArrow4"
  ],
  monthPreviousButton: ["monthPreviousButton", "previousMonth"],
  previousMonth: ["previousMonth"],
  monthValue: ["monthValue"],
  monthNextButton: ["monthNextButton", "next4", "rightArrow4"],
  next4: ["next4"],
  rightArrow4: ["rightArrow4"],
  orderTotalValue: ["orderTotalValue"],
  barValues4: [
    "barValues4",
    "janOrdersTotalValue",
    "febOrdersTotalValue",
    "marOrdersTotalValue",
    "aprOrdersTotalValue",
    "mayOrdersTotalValue",
    "junOrdersTotalValue",
    "julOrdersTotalValue",
    "augOrdersTotalValue"
  ],
  janOrdersTotalValue: ["janOrdersTotalValue"],
  febOrdersTotalValue: ["febOrdersTotalValue"],
  marOrdersTotalValue: ["marOrdersTotalValue"],
  aprOrdersTotalValue: ["aprOrdersTotalValue"],
  mayOrdersTotalValue: ["mayOrdersTotalValue"],
  junOrdersTotalValue: ["junOrdersTotalValue"],
  julOrdersTotalValue: ["julOrdersTotalValue"],
  augOrdersTotalValue: ["augOrdersTotalValue"],
  bars4: [
    "bars4",
    "_114",
    "_124",
    "_134",
    "_1410",
    "_1411",
    "_1412",
    "_1413",
    "_1414"
  ],
  _114: ["_114"],
  _124: ["_124"],
  _134: ["_134"],
  _1410: ["_1410"],
  _1411: ["_1411"],
  _1412: ["_1412"],
  _1413: ["_1413"],
  _1414: ["_1414"],
  bottomText4: [
    "bottomText4",
    "monthValue1",
    "monthValue2",
    "monthValue3",
    "monthValue4",
    "monthValue5",
    "monthValue6",
    "monthValue7",
    "monthValue8"
  ],
  monthValue1: ["monthValue1"],
  monthValue2: ["monthValue2"],
  monthValue3: ["monthValue3"],
  monthValue4: ["monthValue4"],
  monthValue5: ["monthValue5"],
  monthValue6: ["monthValue6"],
  monthValue7: ["monthValue7"],
  monthValue8: ["monthValue8"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  orderStatisticsCard: "div";
  statWidgetControls: typeof StatWidgetControls;
  antdTabs: typeof Tabs;
  ordersByDay: typeof TabPane;
  barChat3: "div";
  chartNavigationControl3: "div";
  previousButton3: "a";
  previousDay3: "div";
  chartHeading3: "div";
  dayNextButton: "a";
  next3: "div";
  rightArrow3: "svg";
  ordersTotalValueInfocus: "div";
  barValues3: "div";
  sunOrdersTotalValue: "div";
  monOrdersTotalValue: "div";
  tueOrdersTotalValue: "div";
  wedOrdersTotalValue: "div";
  thrOrdersTotalValue: "div";
  friOrdersTotalValue: "div";
  satOrdersTotalValue: "div";
  bars3: "div";
  _113: "div";
  _123: "div";
  _133: "div";
  _143: "div";
  _147: "div";
  _148: "div";
  _149: "div";
  bottomText3: "div";
  dayValue1: "div";
  dayValue2: "div";
  dayValue3: "div";
  dayValue4: "div";
  dayValue5: "div";
  dayValue6: "div";
  dayValue7: "div";
  ordersByMonth: typeof TabPane;
  monthBarChat: "div";
  chartNavigationControl2: "div";
  monthPreviousButton: "a";
  previousMonth: "div";
  monthValue: "div";
  monthNextButton: "a";
  next4: "div";
  rightArrow4: "svg";
  orderTotalValue: "div";
  barValues4: "div";
  janOrdersTotalValue: "div";
  febOrdersTotalValue: "div";
  marOrdersTotalValue: "div";
  aprOrdersTotalValue: "div";
  mayOrdersTotalValue: "div";
  junOrdersTotalValue: "div";
  julOrdersTotalValue: "div";
  augOrdersTotalValue: "div";
  bars4: "div";
  _114: "div";
  _124: "div";
  _134: "div";
  _1410: "div";
  _1411: "div";
  _1412: "div";
  _1413: "div";
  _1414: "div";
  bottomText4: "div";
  monthValue1: "div";
  monthValue2: "div";
  monthValue3: "div";
  monthValue4: "div";
  monthValue5: "div";
  monthValue6: "div";
  monthValue7: "div";
  monthValue8: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicStatsCardDate__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicStatsCardDate__VariantsArgs;
    args?: PlasmicStatsCardDate__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicStatsCardDate__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicStatsCardDate__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicStatsCardDate__ArgProps,
      internalVariantPropNames: PlasmicStatsCardDate__VariantProps
    });

    return PlasmicStatsCardDate__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "orderStatisticsCard") {
    func.displayName = "PlasmicStatsCardDate";
  } else {
    func.displayName = `PlasmicStatsCardDate.${nodeName}`;
  }
  return func;
}

export const PlasmicStatsCardDate = Object.assign(
  // Top-level PlasmicStatsCardDate renders the root element
  makeNodeComponent("orderStatisticsCard"),
  {
    // Helper components rendering sub-elements
    statWidgetControls: makeNodeComponent("statWidgetControls"),
    antdTabs: makeNodeComponent("antdTabs"),
    ordersByDay: makeNodeComponent("ordersByDay"),
    barChat3: makeNodeComponent("barChat3"),
    chartNavigationControl3: makeNodeComponent("chartNavigationControl3"),
    previousButton3: makeNodeComponent("previousButton3"),
    previousDay3: makeNodeComponent("previousDay3"),
    chartHeading3: makeNodeComponent("chartHeading3"),
    dayNextButton: makeNodeComponent("dayNextButton"),
    next3: makeNodeComponent("next3"),
    rightArrow3: makeNodeComponent("rightArrow3"),
    ordersTotalValueInfocus: makeNodeComponent("ordersTotalValueInfocus"),
    barValues3: makeNodeComponent("barValues3"),
    sunOrdersTotalValue: makeNodeComponent("sunOrdersTotalValue"),
    monOrdersTotalValue: makeNodeComponent("monOrdersTotalValue"),
    tueOrdersTotalValue: makeNodeComponent("tueOrdersTotalValue"),
    wedOrdersTotalValue: makeNodeComponent("wedOrdersTotalValue"),
    thrOrdersTotalValue: makeNodeComponent("thrOrdersTotalValue"),
    friOrdersTotalValue: makeNodeComponent("friOrdersTotalValue"),
    satOrdersTotalValue: makeNodeComponent("satOrdersTotalValue"),
    bars3: makeNodeComponent("bars3"),
    _113: makeNodeComponent("_113"),
    _123: makeNodeComponent("_123"),
    _133: makeNodeComponent("_133"),
    _143: makeNodeComponent("_143"),
    _147: makeNodeComponent("_147"),
    _148: makeNodeComponent("_148"),
    _149: makeNodeComponent("_149"),
    bottomText3: makeNodeComponent("bottomText3"),
    dayValue1: makeNodeComponent("dayValue1"),
    dayValue2: makeNodeComponent("dayValue2"),
    dayValue3: makeNodeComponent("dayValue3"),
    dayValue4: makeNodeComponent("dayValue4"),
    dayValue5: makeNodeComponent("dayValue5"),
    dayValue6: makeNodeComponent("dayValue6"),
    dayValue7: makeNodeComponent("dayValue7"),
    ordersByMonth: makeNodeComponent("ordersByMonth"),
    monthBarChat: makeNodeComponent("monthBarChat"),
    chartNavigationControl2: makeNodeComponent("chartNavigationControl2"),
    monthPreviousButton: makeNodeComponent("monthPreviousButton"),
    previousMonth: makeNodeComponent("previousMonth"),
    monthValue: makeNodeComponent("monthValue"),
    monthNextButton: makeNodeComponent("monthNextButton"),
    next4: makeNodeComponent("next4"),
    rightArrow4: makeNodeComponent("rightArrow4"),
    orderTotalValue: makeNodeComponent("orderTotalValue"),
    barValues4: makeNodeComponent("barValues4"),
    janOrdersTotalValue: makeNodeComponent("janOrdersTotalValue"),
    febOrdersTotalValue: makeNodeComponent("febOrdersTotalValue"),
    marOrdersTotalValue: makeNodeComponent("marOrdersTotalValue"),
    aprOrdersTotalValue: makeNodeComponent("aprOrdersTotalValue"),
    mayOrdersTotalValue: makeNodeComponent("mayOrdersTotalValue"),
    junOrdersTotalValue: makeNodeComponent("junOrdersTotalValue"),
    julOrdersTotalValue: makeNodeComponent("julOrdersTotalValue"),
    augOrdersTotalValue: makeNodeComponent("augOrdersTotalValue"),
    bars4: makeNodeComponent("bars4"),
    _114: makeNodeComponent("_114"),
    _124: makeNodeComponent("_124"),
    _134: makeNodeComponent("_134"),
    _1410: makeNodeComponent("_1410"),
    _1411: makeNodeComponent("_1411"),
    _1412: makeNodeComponent("_1412"),
    _1413: makeNodeComponent("_1413"),
    _1414: makeNodeComponent("_1414"),
    bottomText4: makeNodeComponent("bottomText4"),
    monthValue1: makeNodeComponent("monthValue1"),
    monthValue2: makeNodeComponent("monthValue2"),
    monthValue3: makeNodeComponent("monthValue3"),
    monthValue4: makeNodeComponent("monthValue4"),
    monthValue5: makeNodeComponent("monthValue5"),
    monthValue6: makeNodeComponent("monthValue6"),
    monthValue7: makeNodeComponent("monthValue7"),
    monthValue8: makeNodeComponent("monthValue8"),

    // Metadata about props expected for PlasmicStatsCardDate
    internalVariantProps: PlasmicStatsCardDate__VariantProps,
    internalArgProps: PlasmicStatsCardDate__ArgProps
  }
);

export default PlasmicStatsCardDate;
/* prettier-ignore-end */
